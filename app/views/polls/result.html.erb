<%
   @page_title = @poll.title
   current_date = Time.current.to_i
   limit_time = Time.parse(@poll.limit).to_i
%>
<script>
  var currentTime = <%= current_date * 1000 %>,
      limitTime = <%= limit_time * 1000 %>
</script>

<h1><%= fa_icon 'question 2x' %> <%= @page_title %></h1>

<!-- 残り時間表示 -->
<p id="RealtimeCountdownArea"></p>

<table class="tbl-result">
  <tbody>
    <tr>
      <th><%= fa_icon 'user lg' %>質問者</th>
      <td>
        <%= @user.username %>さん <%= @user.gender %> <%= @user.age %> <%= @user.area %>
      </td>
    </tr>
    <tr>
      <th><%= fa_icon 'comment-o lg' %>質問詳細</th>
      <td><%= @poll.question %></td>
    </tr>
    <tr>
      <th><%= fa_icon 'hand-pointer-o lg' %>選択肢</th>
      <td>
        <ul>
          <% @poll.choices.each do |c| %>
            <li><%= c.choice %></li>
          <% end %>
        </ul>
      </td>
    </tr>
    <tr>
      <th><%= fa_icon 'clock-o lg' %>期限</th>
      <td>
        <%= l @poll.limit.to_datetime, format: :short %>
      </td>
    </tr>
  </tbody>
</table>

<!-- グラフ表示 -->
<div id="chartArea"></div>

<!-- マップ表示 -->
<div id="chartMapArea"></div>

<script>
  function showCountdown() {
    var diff2Dates = limitTime - currentTime;

    diff2Dates = diff2Dates % ( 1000 * 60 * 60 * 24 );
    var dHour = diff2Dates / ( 1000 * 60 * 60 ); // 時間
    diff2Dates = diff2Dates % ( 1000 * 60 * 60 );
    var dMin = diff2Dates / ( 1000 * 60 ); // 分
    diff2Dates = diff2Dates % ( 1000 * 60 );
    var dSec = diff2Dates / 1000; // 秒
    var msg = Math.floor(dHour) + "時間" + Math.floor(dMin) + "分" + Math.floor(dSec) + "秒";

    if (limitTime > currentTime) {
      // まだ期限が来ていない場合
      msg = "投票終了まで、あと" + msg + "です。";
//      clearInterval(showCountdown());
      document.getElementById("RealtimeCountdownArea").innerHTML = msg;
    }
    else {
      msg = "投票は締め切りました";
      document.getElementById("RealtimeCountdownArea").innerHTML = msg;
      clearInterval(showCountdown(timerId));
    }
    currentTime += 1000;
  }
  var timerId = setInterval('showCountdown()', 1000);
</script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/ammaps/3.13.0/ammap.css">
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/amcharts/3.13.0/amcharts.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/amcharts/3.13.0/serial.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/ammaps/3.13.0/ammap.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/amcharts/3.13.0/themes/light.js"></script>
<script type="text/javascript">
  var answerData = [];

  <%
  i = 0
  # choices_length = @answers.length
  choices_length = @poll.choices.length

  # @answers.each do |key,value|
  choices_length.times do |i|

  hue = i * (360 / choices_length)
  color = "hsl(#{hue}, 100%, 60%)"
  %>
  answerData.push({
    "choices": "<%= i+ 1 %>",
    "answer": 0,
    "color": "<%= color %>"
  });
  <%
  i = i + 1
  end
  %>
  <% @answers.each do |key,value| %>
    answerData[<%= key-1 %>].answer = <%= value %>;
  <% end %>


  var chart = AmCharts.makeChart("chartArea", {
    "type": "serial",
    "theme": "light",
    "marginRight": 10,
    "dataProvider": answerData,
    "startDuration": 1,
    "valueAxes": [{
      "precision": false
    }],
    "graphs": [{
      "balloonText": "<b>[[category]]: [[value]]</b>",
      "fillColorsField": "color",
      "fillAlphas": 0.9,
      "lineAlpha": 0.2,
      "type": "column",
      "valueField": "answer"
    }],
    "chartCursor": {
      "categoryBalloonEnabled": false,
      "cursorAlpha": 0,
      "zoomable": false
    },
    "categoryField": "choices",
    "categoryAxis": {
      "gridPosition": "start",
      "labelRotation": 0
    },
    "export": {
      "enabled": false
    }

  });

  //マップ
  jQuery.getJSON( "https://freegeoip.net/json/", function( geo ) {

    var defaultMap = "usaLow";
    var countryMaps = {
      "AF": [ "afghanistanLow" ],
      "AL": [ "albaniaLow" ],
      "DZ": [ "algeriaLow" ],
      "AD": [ "andorraLow" ],
      "AO": [ "angolaLow" ],
      "AR": [ "argentinaLow" ],
      "AM": [ "armeniaLow" ],
      "AU": [ "australiaLow" ],
      "AT": [ "austriaLow" ],
      "AZ": [ "azerbaijanLow" ],
      "BS": [ "bahamasLow" ],
      "BH": [ "bahrainLow" ],
      "BD": [ "bangladeshLow" ],
      "BY": [ "belarusLow" ],
      "BE": [ "belgiumLow" ],
      "BZ": [ "belizeLow" ],
      "BT": [ "bhutanLow" ],
      "BO": [ "boliviaLow" ],
      "BA": [ "bosniaHerzegovinaCantonsLow" ],
      "BW": [ "botswanaLow" ],
      "BR": [ "brazilLow" ],
      "BN": [ "bruneiDarussalamLow" ],
      "BG": [ "bulgariaLow" ],
      "BF": [ "burkinaFasoLow" ],
      "BI": [ "burundiLow" ],
      "KH": [ "cambodiaLow" ],
      "CM": [ "cameroonLow" ],
      "CA": [ "canadaLow" ],
      "CV": [ "capeVerdeLow" ],
      "CF": [ "centralAfricanRepublicLow" ],
      "TD": [ "chadLow" ],
      "CL": [ "chileLow" ],
      "CN": [ "chinaLow" ],
      "CO": [ "colombiaLow" ],
      "CD": [ "congoDRLow" ],
      "CG": [ "congoLow" ],
      "CR": [ "costaRicaLow" ],
      "HR": [ "croatiaLow" ],
      "CU": [ "cubaLow" ],
      "CY": [ "cyprusLow" ],
      "UN": [ "cyprusNorthernCyprusLow" ],
      "GB": [ "unitedKingdomLow" ],
      "CZ": [ "czechRepublicLow" ],
      "DK": [ "denmarkLow" ],
      "DJ": [ "djiboutiLow" ],
      "DO": [ "dominicanRepublicLow" ],
      "EC": [ "ecuadorLow" ],
      "EG": [ "egyptLow" ],
      "SV": [ "elSalvadorLow" ],
      "EE": [ "estoniaLow" ],
      "FI": [ "finlandLow" ],
      "FR": [ "france2016Low" ],
      "GE": [ "georgiaLow" ],
      "DE": [ "germanyLow" ],
      "GR": [ "greeceLow" ],
      "GT": [ "guatemalaLow" ],
      "GN": [ "guineaLow" ],
      "GY": [ "guyanaLow" ],
      "HT": [ "haitiLow" ],
      "HN": [ "hondurasLow" ],
      "HK": [ "hongKongLow" ],
      "HU": [ "hungaryLow" ],
      "GL": [ "icelandLow" ],
      "IS": [ "icelandLow" ],
      "IN": [ "indiaLow" ],
      "ID": [ "indonesiaLow" ],
      "MY": [ "malaysiaLow" ],
      "IR": [ "iranLow" ],
      "IQ": [ "iraqLow" ],
      "IE": [ "irelandLow" ],
      "IL": [ "israelLow" ],
      "PS": [ "palestineLow" ],
      "VA": [ "italyLow" ],
      "SM": [ "sanMarinoLow" ],
      "MT": [ "italyLow" ],
      "IT": [ "italyLow" ],
      "JM": [ "jamaicaLow" ],
      "JP": [ "japanLow" ],
      "KZ": [ "kazakhstanLow" ],
      "KE": [ "kenyaLow" ],
      "XK": [ "kosovoLow" ],
      "KG": [ "kyrgyzstanLow" ],
      "LA": [ "laosLow" ],
      "LV": [ "latviaLow" ],
      "LT": [ "lithuaniaLow" ],
      "LU": [ "luxembourgLow" ],
      "MK": [ "macedoniaLow" ],
      "ML": [ "maliLow" ],
      "MX": [ "mexicoLow" ],
      "MD": [ "moldovaLow" ],
      "MN": [ "mongoliaLow" ],
      "ME": [ "montenegroLow" ],
      "MA": [ "moroccoLow" ],
      "MM": [ "myanmarLow" ],
      "NP": [ "nepalLow" ],
      "NL": [ "netherlandsLow" ],
      "NZ": [ "newZealandLow" ],
      "NI": [ "nicaraguaLow" ],
      "NG": [ "nigeriaLow" ],
      "NO": [ "norwayLow" ],
      "AE": [ "unitedArabEmiratesLow" ],
      "OM": [ "omanLow" ],
      "PK": [ "pakistanLow" ],
      "PA": [ "panamaLow" ],
      "PY": [ "paraguayLow" ],
      "PE": [ "peruLow" ],
      "PH": [ "philippinesLow" ],
      "PL": [ "polandLow" ],
      "PT": [ "portugalLow" ],
      "PR": [ "puertoRicoLow" ],
      "US": [ "usaLow" ],
      "QA": [ "qatarLow" ],
      "RO": [ "romaniaLow" ],
      "RW": [ "rwandaLow" ],
      "SA": [ "saudiArabiaLow" ],
      "RS": [ "serbiaLow" ],
      "SG": [ "singaporeLow" ],
      "SK": [ "slovakiaLow" ],
      "SI": [ "sloveniaLow" ],
      "LS": [ "southAfricaLow" ],
      "ZA": [ "southAfricaLow" ],
      "KR": [ "southKoreaLow" ],
      "ES": [ "spainLow" ],
      "LK": [ "sriLankaLow" ],
      "SR": [ "surinameLow" ],
      "SE": [ "swedenLow" ],
      "CH": [ "switzerlandLow" ],
      "SY": [ "syriaLow" ],
      "TW": [ "taiwanLow" ],
      "TJ": [ "tajikistanLow" ],
      "TH": [ "thailandLow" ],
      "TR": [ "turkeyLow" ],
      "UG": [ "ugandaLow" ],
      "UA": [ "ukraineLow" ],
      "GG": [ "unitedKingdomLow" ],
      "JE": [ "unitedKingdomLow" ],
      "IM": [ "unitedKingdomLow" ],
      "UY": [ "uruguayLow" ],
      "UZ": [ "uzbekistanLow" ],
      "VE": [ "venezuelaLow" ],
      "VN": [ "vietnamLow" ],
      "YE": [ "yemenLow" ]
    };

    // calculate which map to be used
    var currentMap = defaultMap;
    var titles = [];
    if ( countryMaps[ geo.country_code ] !== undefined ) {
      currentMap = countryMaps[ geo.country_code ][ 0 ];

    }

    var map = AmCharts.makeChart( "chartMapArea", {
      "type": "map",
      "theme": "default",
      "colorSteps": 50,
      "dataProvider": {
        "mapURL": "/assets/map/" + currentMap + ".svg",
        "getAreasFromMap": true,
        "zoomLevel": 1.0,
        "areas": [
          {
            id: "JP-01", value: 9
          },
          {
            id: "JP-03", value: 8
          },
          {
            id: "JP-06", value: 11
          },
          {
            id: "JP-10", value: 9
          },
          {
            id: "JP-11", value: 9
          },
          {
            id: "JP-12", value: 9
          },
          {
            id: "JP-13", value: 20
          },
          {
            id: "JP-14", value: 9
          }

        ]
      },
      "areasSettings": {
        "autoZoom": true,
        "balloonText": "[[title]]: <strong>[[value]]</strong>"
      },
      "valueLegend": {
        "right": 10,
        "minValue": "little",
        "maxValue": "a lot!"
      },
      "zoomControl": {
        "minZoomLevel": 0.9
      },
      "titles": titles,
      "listeners":[{"event":"init", "method":updateHeatmap}]
    } );


    function updateHeatmap(event) {
      var map = event.chart;
      if ( map.dataGenerated )
        return;
      if ( map.dataProvider.areas.length === 0 ) {
        setTimeout( updateHeatmap, 100 );
        return;
      }
      map.dataGenerated = true;
      map.validateNow();
    }
  } );
</script>