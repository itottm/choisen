<%
   @page_title = @poll.title
   choices_array = @poll.choices.split(' |||| ')
   current_date = Time.current.to_i
   limit_time = Time.parse(@poll.limit).to_i
%>
<script>
  var currentTime = <%= current_date * 1000 %>,
      limitTime = <%= limit_time * 1000 %>
</script>

<h1><%= @page_title %></h1>
<h1><%= @user.gender %></h1>
<h1><%= @user.age %></h1>
<h1><%= @user.area %></h1>

<!-- 残り時間表示 -->
<p id="RealtimeCountdownArea"></p>

<!-- グラフ表示 -->
<div id="chartArea"></div>

<table>
  <tr>
    <th>質問タイトル</th>
    <td><%= @poll.title %></td>
  </tr>
  <tr>
    <th>質問詳細</th>
    <td><%= @poll.question %></td>
  </tr>
  <tr>
    <th>選択肢</th>
    <td>
      <ul>
        <% choices_array.each do |value| %>
          <li><%= value %></li>
        <% end %>
      </ul>
    </td>
  </tr>
</table>



<!-- コメントフォーム -->

<input id="comment" type="text">

<input id="send" type="button" value="send">

<script>
  function showCountdown() {
    var diff2Dates = limitTime - currentTime;

    diff2Dates = diff2Dates % ( 1000 * 60 * 60 * 24 );
    var dHour = diff2Dates / ( 1000 * 60 * 60 ); // 時間
    diff2Dates = diff2Dates % ( 1000 * 60 * 60 );
    var dMin = diff2Dates / ( 1000 * 60 ); // 分
    diff2Dates = diff2Dates % ( 1000 * 60 );
    var dSec = diff2Dates / 1000; // 秒
    var msg = Math.floor(dHour) + "時間" + Math.floor(dMin) + "分" + Math.floor(dSec) + "秒";

    if (limitTime > currentTime) {
      // まだ期限が来ていない場合
      msg = "投票終了まで、あと" + msg + "です。";
//      clearInterval(showCountdown());
      document.getElementById("RealtimeCountdownArea").innerHTML = msg;
    }
    else {
      msg = "投票は締め切りました";
      document.getElementById("RealtimeCountdownArea").innerHTML = msg;
      clearInterval(showCountdown(timerId));
    }
    currentTime += 1000;
  }
  var timerId = setInterval('showCountdown()', 1000);
</script>



<script>

  var ws_rails = new WebSocketRails("localhost:3001/websocket");
  var websocket_chat_channel = ws_rails.subscribe("websocket_chat_channel");

  websocket_chat_channel.bind("websocket_chat", function (message) {
    var message_li = document.createElement("li");
    message_li.textContent = message;

    document.getElementById("chat_area").appendChild(message_li);
  });

  document.getElementById("send").onclick = function () {
    var comment = document.getElementById("comment").value;

    // この一行を変更
    // ws_rails.trigger("websocket_chat", comment);
    websocket_chat_channel.trigger("websocket_chat", comment);
  }
</script>
<script type="text/javascript" charset="utf-8">
  /*  var update;

   $(function() {
   var timer;
   return timer = setInterval(function() {
   return update();
   }, 5000);
   });

   update = function() {
   $.ajax({
   url: 'polls/ajax_action',
   type: 'GET'
   });
   };*/
</script>

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/amcharts/3.13.0/amcharts.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/amcharts/3.13.0/serial.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/amcharts/3.13.0/themes/light.js"></script>
<script type="text/javascript">
  var answerData = [];

  <%
  i = 0
  choices_length = @answers.length

  @answers.each do |key,value|

  hue = i * (360 / choices_length)
  color = "hsl(#{hue}, 100%, 60%)"
  %>
  answerData.push({
    "choices": "<%= key %>",
    "answer": <%= value %>,
    "color": "<%= color %>"
  });
  <% i = i + 1
  end %>

  var chart = AmCharts.makeChart("chartArea", {
    "type": "serial",
    "theme": "light",
    "marginRight": 10,
    "dataProvider": answerData,
    "startDuration": 1,
    "valueAxes": [{
      "precision": false
    }],
    "graphs": [{
      "balloonText": "<b>[[category]]: [[value]]</b>",
      "fillColorsField": "color",
      "fillAlphas": 0.9,
      "lineAlpha": 0.2,
      "type": "column",
      "valueField": "answer"
    }],
    "chartCursor": {
      "categoryBalloonEnabled": false,
      "cursorAlpha": 0,
      "zoomable": false
    },
    "categoryField": "choices",
    "categoryAxis": {
      "gridPosition": "start",
      "labelRotation": 45
    },
    "export": {
      "enabled": false
    }

  });
</script>
