<%
  @page_title = @poll.title
  choices_array = @poll.choices.split(' |||| ')
  current_date = Time.current.to_i
  limit_time = Time.parse(@poll.limit).to_i
%>
<script>
  var currentTime = <%= current_date * 1000 %>,
      limitTime = <%= limit_time * 1000 %>
</script>

<h1><%= @page_title %></h1>

<!-- 残り時間表示 -->
<p id="RealtimeCountdownArea"></p>

<!-- グラフ表示 -->
<div id="chart">
  <canvas id="myChart" width="400" height="200"></canvas>
</div>


<table>
  <tr>
    <th>質問タイトル</th>
    <td><%= @poll.title %></td>
  </tr>
  <tr>
    <th>質問詳細</th>
    <td><%= @poll.question %></td>
  </tr>
  <tr>
    <th>選択肢</th>
    <td>
      <ul>
        <% choices_array.each do |value| %>
          <li><%= value %></li>
        <% end %>
      </ul>
    </td>
  </tr>
</table>


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.js"></script>
<script type="text/javascript">
  var keyArray = [];
  var valueArray = [];

  <% @answers.each do |key,value| %>
  keyArray.push('<%= key %>');
  valueArray.push('<%= value %>');
  <% end %>

  var data = {
    labels: keyArray,
    datasets: [
      {
        label: "My First dataset",
        fillColor: "rgba(220,220,220,0.5)",
        strokeColor: "rgba(220,220,220,0.8)",
        highlightFill: "rgba(220,220,220,0.75)",
        highlightStroke: "rgba(220,220,220,1)",
        data: valueArray
      }
    ]
  };

  var ctx = document.getElementById("myChart").getContext("2d");
  new Chart(ctx).Bar(data, {
    scaleBeginAtZero: true,

    //Boolean - Whether grid lines are shown across the chart
    scaleShowGridLines: true,

    //String - Colour of the grid lines
    scaleGridLineColor: "rgba(0,0,0,.05)",

    //Number - Width of the grid lines
    scaleGridLineWidth: 1,

    //Boolean - Whether to show horizontal lines (except X axis)
    scaleShowHorizontalLines: true,

    //Boolean - Whether to show vertical lines (except Y axis)
    scaleShowVerticalLines: true,

    //Boolean - If there is a stroke on each bar
    barShowStroke: true,

    //Number - Pixel width of the bar stroke
    barStrokeWidth: 2,

    //Number - Spacing between each of the X value sets
    barValueSpacing: 5,

    //Number - Spacing between data sets within X values
    barDatasetSpacing: 1
  });
</script>

<% @answers.each do |key, value| %>
  <p>
    <%= key %> →
    <%= value %>
  </p>
<% end %>

<!-- チャット表示部分 -->

<ul id="chat_area">

</ul>



<!-- コメントフォーム -->

<input id="comment" type="text">

<input id="send" type="button" value="send">

<script>
  function showCountdown() {
    var diff2Dates = limitTime - currentTime;

    diff2Dates = diff2Dates % ( 1000 * 60 * 60 * 24 );
    var dHour = diff2Dates / ( 1000 * 60 * 60 ); // 時間
    diff2Dates = diff2Dates % ( 1000 * 60 * 60 );
    var dMin = diff2Dates / ( 1000 * 60 ); // 分
    diff2Dates = diff2Dates % ( 1000 * 60 );
    var dSec = diff2Dates / 1000; // 秒
    var msg = Math.floor(dHour) + "時間" + Math.floor(dMin) + "分" + Math.floor(dSec) + "秒";

    if (limitTime > currentTime) {
      // まだ期限が来ていない場合
      msg = "投票終了まで、あと" + msg + "です。";
//      clearInterval(showCountdown());
      document.getElementById("RealtimeCountdownArea").innerHTML = msg;
    }
    else {
      msg = "投票は締め切りました";
      document.getElementById("RealtimeCountdownArea").innerHTML = msg;
      clearInterval(showCountdown(timerId));
    }
    currentTime += 1000;
  }
  var timerId = setInterval('showCountdown()', 1000);
</script>



<script>

  var ws_rails = new WebSocketRails("localhost:3001/websocket");
  var websocket_chat_channel = ws_rails.subscribe("websocket_chat_channel");

  websocket_chat_channel.bind("websocket_chat", function (message) {
    var message_li = document.createElement("li");
    message_li.textContent = message;

    document.getElementById("chat_area").appendChild(message_li);
  });

  document.getElementById("send").onclick = function () {
    var comment = document.getElementById("comment").value;

    // この一行を変更
    // ws_rails.trigger("websocket_chat", comment);
    websocket_chat_channel.trigger("websocket_chat", comment);
  }
</script>
<p id="time"><%= @time %></p>
<script type="text/javascript" charset="utf-8">
  /*  var update;

   $(function() {
   var timer;
   return timer = setInterval(function() {
   return update();
   }, 5000);
   });

   update = function() {
   $.ajax({
   url: 'polls/ajax_action',
   type: 'GET'
   });
   };*/
</script>